---
// --- Header Component for Singular Protocol ---

// Define the navigation items in an array for easy management.
// As you build out new pages, you can update the hrefs here.
const navItems = [
    { name: 'Home', href: '/' },
    { name: 'About', href: '/about' },
    { name: 'The Protocol', href: '/protocol' },
    { name: 'SNG Token', href: '/token' },
    { name: 'DAO', href: '/dao' },
    { name: 'Learn', href: '/learn' },
    { name: 'News', href: '/news' },
    { name: 'Community', href: '/community' }
];

// We get the current path to apply an "active" style to the correct nav link.
const { pathname } = Astro.url;
---

<header class="sticky top-0 z-50 w-full bg-navy-deep/80 backdrop-blur-md">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <!-- Logo Section -->
            <div class="flex-shrink-0">
                <a href="/" title="Singular Home">
                    <img class="h-10 w-auto" src="/logo.png" alt="Singular Protocol Logo" />
                </a>
            </div>

            <!-- Desktop Navigation -->
            <nav class="hidden md:flex items-center space-x-4">
                {navItems.map(item => (
                    <a 
                        href={item.href} 
                        class:list={[
                            "px-3 py-2 rounded-md text-sm font-medium transition-colors",
                            pathname === item.href 
                                ? "bg-gray-700 text-white" 
                                : "text-gray-300 hover:bg-gray-800 hover:text-white"
                        ]}
                    >
                        {item.name}
                    </a>
                ))}
            </nav>

            <!-- Mobile Menu Button -->
            <div class="md:hidden flex items-center">
                <button id="mobile-menu-button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                    <span class="sr-only">Open main menu</span>
                    <!-- Hamburger Icon -->
                    <svg id="icon-open" class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                    <!-- Close Icon (hidden by default) -->
                    <svg id="icon-close" class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Mobile Menu, shown/hidden based on button click -->
    <div class="md:hidden hidden" id="mobile-menu">
        <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            {navItems.map(item => (
                 <a 
                    href={item.href} 
                    class:list={[
                        "block px-3 py-2 rounded-md text-base font-medium transition-colors",
                        pathname === item.href 
                            ? "bg-gray-700 text-white" 
                            : "text-gray-300 hover:bg-gray-800 hover:text-white"
                    ]}
                >
                    {item.name}
                </a>
            ))}
        </div>
    </div>
</header>

<script>
    // This script handles the opening and closing of the mobile menu.
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const openIcon = document.getElementById('icon-open');
    const closeIcon = document.getElementById('icon-close');

    menuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
        openIcon.classList.toggle('hidden');
        closeIcon.classList.toggle('hidden');
        const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
        menuButton.setAttribute('aria-expanded', !isExpanded);
    });
</script>

<style>
    /* Define a custom color for the header background */
    .bg-navy-deep {
        background-color: #0d1a26; /* A deep navy blue, adjust as needed */
    }
</style>
